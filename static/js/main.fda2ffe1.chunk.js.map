{"version":3,"sources":["components/MovieCard/MovieCard.js","components/MoviesList/MoviesList.js","api/api.js","components/FindMovie/FindMovie.js","App.js","index.js"],"names":["MovieCard","title","description","imgUrl","imdbUrl","className","src","alt","href","MoviesList","movies","map","movie","key","imdbId","getMovie","a","fetch","then","response","json","FindMovie","addMovie","useState","value","setValue","movieCard","setMovie","found","setFound","getFilm","data","Response","Title","Plot","Poster","imdbID","htmlFor","type","id","placeholder","onChange","event","target","onClick","App","state","find","film","setState","this","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fda2ffe1.chunk.js","sourcesContent":["import React from 'react';\r\nimport './MovieCard.scss';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const MovieCard = ({\r\n  title,\r\n  description = '',\r\n  imgUrl,\r\n  imdbUrl,\r\n}) => (\r\n  <div className=\"card\">\r\n    <div className=\"card-image\">\r\n      <figure className=\"image is-4by3\">\r\n        <img\r\n          src={imgUrl}\r\n          alt=\"Film logo\"\r\n        />\r\n      </figure>\r\n    </div>\r\n    <div className=\"card-content\">\r\n      <div className=\"media\">\r\n        <div className=\"media-left\">\r\n          <figure className=\"image is-48x48\">\r\n            <img\r\n              src=\"images/imdb-logo.jpeg\"\r\n              alt=\"imdb\"\r\n            />\r\n          </figure>\r\n        </div>\r\n        <div className=\"media-content\">\r\n          <p className=\"title is-8\">{title}</p>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"content\">\r\n        {description}\r\n        <br />\r\n        <a href={imdbUrl}>IMDB</a>\r\n      </div>\r\n    </div>\r\n  </div>\r\n);\r\n\r\nMovieCard.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  description: PropTypes.string.isRequired,\r\n  imgUrl: PropTypes.string.isRequired,\r\n  imdbUrl: PropTypes.string.isRequired,\r\n};\r\n","import React from 'react';\r\n\r\nimport './MoviesList.scss';\r\nimport PropTypes from 'prop-types';\r\nimport { MovieCard } from '../MovieCard';\r\n\r\nexport const MoviesList = ({\r\n  movies = [],\r\n}) => (\r\n  <div className=\"movies\">\r\n    {movies.map(movie => (\r\n      <MovieCard key={movie.imdbId} {...movie} />\r\n    ))}\r\n  </div>\r\n);\r\n\r\nMoviesList.propTypes = {\r\n  movies: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      imdbId: PropTypes.string.isRequired,\r\n    }).isRequired,\r\n  ).isRequired,\r\n};\r\n","const API_URL = 'https://www.omdbapi.com/?apikey=75257100';\n\nexport const getMovie = async title => fetch(`${API_URL}&t=${title}`)\n  .then(response => response.json());\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport PropTypes from 'prop-types';\nimport { MovieCard } from '../MovieCard';\nimport { getMovie } from '../../api/api';\n\nexport const FindMovie = ({ addMovie }) => {\n  const [value, setValue] = useState('');\n  const [movieCard, setMovie] = useState(null);\n  const [found, setFound] = useState(false);\n\n  const addFilm = () => {\n    addMovie(movieCard);\n    setMovie(null);\n  };\n\n  const getFilm = async() => {\n    setFound(false);\n    const data = await getMovie(value);\n\n    if (data.Response === 'False') {\n      setFound(true);\n      setValue('');\n      setMovie(null);\n\n      return;\n    }\n\n    setMovie({\n      title: data.Title,\n      description: data.Plot,\n      imgUrl: data.Poster,\n      imdbUrl: `https://www.imdb.com/title/${data.imdbID}`,\n      imdbId: data.imdbID,\n    });\n    setValue('');\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={`input ${!found ? '' : 'is-danger'}`}\n              value={value}\n              onChange={event => setValue(event.target.value)}\n            />\n          </div>\n          {found && (\n          <p className=\"help is-danger\">\n            Can&apos;t find a movie with such a title\n          </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={() => getFilm()}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={() => addFilm()}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movieCard && (<MovieCard {...movieCard} />)}\n      </div>\n    </>\n  );\n};\n\nFindMovie.propTypes = {\n  addMovie: PropTypes.func.isRequired,\n};\n","import React, { Component } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport data from './api/movies.json';\n\nexport class App extends Component {\n  state = {\n    movies: data,\n  };\n\n  addMovie = (movie) => {\n    if (movie !== null) {\n      if (!this.state.movies.find(film => film.imdbId === movie.imdbId)) {\n        this.setState(state => ({\n          movies: [...state.movies, movie],\n        }));\n      }\n    }\n  }\n\n  render() {\n    const { movies } = this.state;\n\n    return (\n      <div className=\"page\">\n        <div className=\"page-content\">\n          <MoviesList movies={movies} />\n        </div>\n        <div className=\"sidebar\">\n          <FindMovie addMovie={this.addMovie} />\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'bulma/css/bulma.css';\r\nimport { App } from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}